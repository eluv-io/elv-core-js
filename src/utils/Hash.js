/* eslint-disable no-empty, no-func-assign, no-control-regex, no-cond-assign */
!function(n,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(n=n||self).sha1=t();}(this,(function(){"use strict";var n,t=String.fromCharCode;function r(n){return n=function(n,t,r){if(!t&&!r&&n instanceof Uint8Array&&!n.copy) return n;t>>>=0,null==r&&(r=n.byteLength-t);return new Uint8Array(n.buffer,n.byteOffset+t,r);}(n),t.apply(String,n);} function e(n,t){if("string"==typeof n) return n;if(n=r(n),!1!==t&&(e=n,!c.test(e))) if(t)n=s(n);else if(null==t) try {n=s(n);} catch (n){} var e;return n;} function i(n,t){n=String(n),null==t&&(t=function(n){var t=a.exec(n);return !!t&&t[1];}(n)),t&&(n=function(n){return unescape(encodeURI(n));}(n));for(var r=n.length,e=new Uint8Array(r);r--;)e[r]=n.charCodeAt(r);return e;} function f(n){switch (n){case !1:case "binary":return r(this);case "hex":return i=(t=this).BYTES_PER_ELEMENT<<1,t.reduce((function(n,t){return n+(t>>>0).toString(16).padStart(i,"0");}),"");case "base64":return btoa(r(this));case "utf8":n=!0;} var t,i;return e(this,n);} function u(){return void 0!==n||(n=!!new Uint8Array(new Uint16Array([1]).buffer)[0],u=function(){return n;}),n;} function o(n){return (255&n)<<24|(65280&n)<<8|n>>8&65280|n>>24&255;} var a=/([^\x00-\xFF])/,c=/^[\x00-\x7F]*$/;function s(n){return decodeURIComponent(escape(n));} return function(n,t){var r=n&&n.BYTES_PER_ELEMENT?n:i(n,t);return (r=function(n){var t,r,e,i,f,a,c=n.byteLength,s=0,y=Uint32Array.from([t=1732584193,r=4023233417,~t,~r,3285377520]),d=new Uint32Array(80),h=c/4+2|15,p=new Uint32Array(h+1);for(p[h]=8*c,p[c>>2]|=128<<(~c<<3);c--;)p[c>>2]|=n[c]<<(~c<<3);for(t=y.slice();s<h;s+=16,t.set(y)){for(c=0;c<80;t[0]=(f=((n=t[0])<<5|n>>>27)+t[4]+(d[c]=c<16?p[s+c]:f<<1|f>>>31)+1518500249,r=t[1],e=t[2],i=t[3],f+((a=c/5>>2)?2!=a?(r^e^i)+(2&a?1876969533:341275144):882459459+(r&e|r&i|e&i):r&e|~r&i)),t[1]=n,t[2]=r<<30|r>>>2,t[3]=e,t[4]=i,++c)f=d[c-3]^d[c-8]^d[c-14]^d[c-16];for(c=5;c;)y[--c]=y[c]+t[c];} return u()&&(y=y.map(o)),new Uint8Array(y.buffer,y.byteOffset,y.byteLength);}(r)).toString=f,r;};}));
